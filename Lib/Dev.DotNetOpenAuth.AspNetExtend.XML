<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dev.DotNetOpenAuth.AspNetExtend</name>
    </assembly>
    <members>
        <member name="F:Dev.DotNetOpenAuth.AspNetExtend.Client.QQClient.AuthorizationEndpoint">
            <summary>
              The authorization endpoint.
            </summary>
        </member>
        <member name="F:Dev.DotNetOpenAuth.AspNetExtend.Client.QQClient.TokenEndpoint">
            <summary>
              The token endpoint.
            </summary>
        </member>
        <member name="F:Dev.DotNetOpenAuth.AspNetExtend.Client.QQClient.appId">
            <summary>
              The _app id.
            </summary>
        </member>
        <member name="F:Dev.DotNetOpenAuth.AspNetExtend.Client.QQClient.appSecret">
            <summary>
              The _app secret.
            </summary>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.QQClient.#ctor(System.String,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:DotNetOpenAuth.AspNet.Clients.SinaClient" /> class.
            </summary>
            <param name="appId"> The app id. </param>
            <param name="appSecret"> The app secret. </param>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.QQClient.GetServiceLoginUrl(System.Uri)">
            <summary>
              The get service login url.
            </summary>
            <param name="returnUrl"> The return url. </param>
            <returns> An absolute URI. </returns>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.QQClient.GetUserData(System.String)">
            <summary>
              The get user data.
            </summary>
            <param name="accessToken"> The access token. </param>
            <returns> A dictionary of profile data. </returns>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.QQClient.QueryAccessToken(System.Uri,System.String)">
            <summary>
              Obtains an access token given an authorization code and callback URL.
            </summary>
            <param name="returnUrl"> The return url. </param>
            <param name="authorizationCode"> The authorization code. </param>
            <returns> The access token. </returns>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.QQClient.NormalizeHexEncoding(System.String)">
            <summary>
              Converts any % encoded values in the URL to uppercase.
            </summary>
            <param name="url"> The URL string to normalize </param>
            <returns> The normalized url </returns>
            <example>
              NormalizeHexEncoding("Login.aspx?ReturnUrl=%2fAccount%2fManage.aspx") returns "Login.aspx?ReturnUrl=%2FAccount%2FManage.aspx"
            </example>
            <remarks>
              There is an issue in Sina whereby it will rejects the redirect_uri value if
              the url contains lowercase % encoded values.
            </remarks>
        </member>
        <member name="T:Dev.DotNetOpenAuth.AspNetExtend.DictionaryExtensions">
            <summary>
              The dictionary extensions.
            </summary>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.DictionaryExtensions.AddDataIfNotEmpty(System.Collections.Generic.Dictionary{System.String,System.String},System.Xml.Linq.XDocument,System.String)">
            <summary>
              Adds the value from an XDocument with the specified element name if it's not empty.
            </summary>
            <param name="dictionary"> The dictionary. </param>
            <param name="document"> The document. </param>
            <param name="elementName"> Name of the element. </param>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.DictionaryExtensions.AddItemIfNotEmpty(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
              Adds a key/value pair to the specified dictionary if the value is not null or empty.
            </summary>
            <param name="dictionary"> The dictionary. </param>
            <param name="key"> The key. </param>
            <param name="value"> The value. </param>
        </member>
        <member name="T:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient">
            <summary>
              The Sina client.
            </summary>
        </member>
        <member name="F:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient.AuthorizationEndpoint">
            <summary>
              The authorization endpoint.
            </summary>
        </member>
        <member name="F:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient.TokenEndpoint">
            <summary>
              The token endpoint.
            </summary>
        </member>
        <member name="F:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient.appId">
            <summary>
              The _app id.
            </summary>
        </member>
        <member name="F:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient.appSecret">
            <summary>
              The _app secret.
            </summary>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient.#ctor(System.String,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:DotNetOpenAuth.AspNet.Clients.SinaClient" /> class.
            </summary>
            <param name="appId"> The app id. </param>
            <param name="appSecret"> The app secret. </param>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient.GetServiceLoginUrl(System.Uri)">
            <summary>
              The get service login url.
            </summary>
            <param name="returnUrl"> The return url. </param>
            <returns> An absolute URI. </returns>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient.GetUserData(System.String)">
            <summary>
              The get user data.
            </summary>
            <param name="accessToken"> The access token. </param>
            <returns> A dictionary of profile data. </returns>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient.QueryAccessToken(System.Uri,System.String)">
            <summary>
              Obtains an access token given an authorization code and callback URL.
            </summary>
            <param name="returnUrl"> The return url. </param>
            <param name="authorizationCode"> The authorization code. </param>
            <returns> The access token. </returns>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.Client.SinaClient.NormalizeHexEncoding(System.String)">
            <summary>
              Converts any % encoded values in the URL to uppercase.
            </summary>
            <param name="url"> The URL string to normalize </param>
            <returns> The normalized url </returns>
            <example>
              NormalizeHexEncoding("Login.aspx?ReturnUrl=%2fAccount%2fManage.aspx") returns "Login.aspx?ReturnUrl=%2FAccount%2FManage.aspx"
            </example>
            <remarks>
              There is an issue in Sina whereby it will rejects the redirect_uri value if
              the url contains lowercase % encoded values.
            </remarks>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.UrlUtilities.CreateQueryString(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
              Concatenates a list of name-value pairs as key=value&amp;key=value,
              taking care to properly encode each key and value for URL
              transmission according to RFC 3986.  No ? is prefixed to the string.
            </summary>
            <param name="args"> The dictionary of key/values to read from. </param>
            <returns> The formulated querystring style string. </returns>
        </member>
        <member name="M:Dev.DotNetOpenAuth.AspNetExtend.UrlUtilities.EscapeUriDataStringRfc3986(System.String)">
            <summary>
              Escapes a string according to the URI data string rules given in RFC 3986.
            </summary>
            <param name="value"> The value to escape. </param>
            <returns> The escaped value. </returns>
            <remarks>
              The <see cref="M:System.Uri.EscapeDataString(System.String)" /> method is <i>supposed</i> to take on
              RFC 3986 behavior if certain elements are present in a .config file.  Even if this
              actually worked (which in my experiments it <i>doesn't</i>), we can't rely on every
              host actually having this configuration element present.
            </remarks>
        </member>
        <member name="F:Dev.DotNetOpenAuth.AspNetExtend.UrlUtilities.UriRfc3986CharsToEscape">
            <summary>
              The set of characters that are unreserved in RFC 2396 but are NOT unreserved in RFC 3986.
            </summary>
        </member>
    </members>
</doc>
