<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dev.Framework.Cache</name>
    </assembly>
    <members>
        <member name="T:Dev.Framework.Cache.FactNull">
            <summary>
            事实上的空
            </summary>
        </member>
        <member name="T:Dev.Framework.Cache.CacheWraper">
            <summary>
            包装器
            </summary>
        </member>
        <member name="T:Dev.Framework.Cache.ICacheWraper">
            <summary>
            包装器接口
            </summary>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheWraper.SmartyGetPut``1(System.Object,System.DateTime,System.Func{``0})">
            <summary>
            绝对过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="absoluteExpiration"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheWraper.SmartyGetPut``1(System.DateTime,System.Func{``0})">
            <summary>
            绝对过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="absoluteExpiration"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheWraper.SmartyGetPut``1(System.Object,System.Func{``0})">
            <summary>
            不过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheWraper.SmartyGetPut``1(System.Func{``0})">
            <summary>
            不过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheWraper.SmartyGetPut``1(System.Object,System.TimeSpan,System.Func{``0})">
            <summary>
            相对过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="slidingExpiration"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheWraper.SmartyGetPut``1(System.TimeSpan,System.Func{``0})">
            <summary>
            相对过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="slidingExpiration"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.CacheWraper.SmartyGetPut``1(System.Object,System.DateTime,System.Func{``0})">
            <summary>
            绝对过期的智能方式
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="absoluteExpiration"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.CacheWraper.SmartyGetPut``1(System.DateTime,System.Func{``0})">
            <summary>
            绝对过期的智能方式
            </summary>
            <typeparam name="T"></typeparam>
            <param name="absoluteExpiration"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.CacheWraper.SmartyGetPut``1(System.Object,System.TimeSpan,System.Func{``0})">
            <summary>
            相对过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="slidingExpiration"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.CacheWraper.SmartyGetPut``1(System.TimeSpan,System.Func{``0})">
            <summary>
            相对过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="slidingExpiration"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.CacheWraper.SmartyGetPut``1(System.Object,System.Func{``0})">
            <summary>
            永远不过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Dev.Framework.Cache.CacheWraper.SmartyGetPut``1(System.Func{``0})">
            <summary>
            永远不过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="GetDataFunc"></param>
            <returns></returns>
        </member>
        <member name="T:Dev.Framework.Cache.ICacheState">
            <summary>
            Interface implemented by cache state providers that store and retrieve state data for the cache.
            </summary>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Get``1">
            <summary>
             Gets state data stored with the default key.
            </summary>
            <typeparam name="T">The type of data to retrieve.</typeparam>
            <returns>An instance of <typeparamref name="T"/> or null if not found.</returns>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Get``1(System.Object)">
            <summary>
            Gets state data stored with the specified key.
            </summary>
            <typeparam name="T">The type of data to retrieve.</typeparam>
            <param name="key">An object representing the unique key with which the data was stored.</param>
            <returns>An instance of <typeparamref name="T"/> or null if not found.</returns>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Put``1(``0)">
            <summary>
            Puts state data into the cache state with the specified key with no expiration.
            </summary>
            <typeparam name="T">The type of data to put.</typeparam>
            <param name="instance">An instance of <typeparamref name="T"/> to store.</param>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Put``1(System.Object,``0)">
            <summary>
            Puts state data into the cache state with the specified key with no expiration.
            </summary>
            <typeparam name="T">The type of data to put.</typeparam>
            <param name="key">An object representing the unique key with which the data is stored.</param>
            <param name="instance">An instance of <typeparamref name="T"/> to store.</param>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Put``1(``0,System.DateTime)">
            <summary>
            Puts state data into the cache state with the default key and absolute expiration policy.
            </summary>
            <typeparam name="T">The type of data to put.</typeparam>
            <param name="instance">An instance of <typeparamref name="T"/> to store.</param>
            <param name="absoluteExpiration">The date and time when the data from the cache will be removed.</param>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Put``1(System.Object,``0,System.DateTime)">
            <summary>
            Puts state data into the cache state with the specified key with the specified absolute expiration.
            </summary>
            <typeparam name="T">The type of data to put.</typeparam>
            <param name="key">An object representing the unique key with which the data is stored.</param>
            <param name="instance">An instance of <typeparamref name="T"/> to store.</param>
            <param name="absoluteExpiration">The date and time when the data from the cache will be removed.</param>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Put``1(``0,System.TimeSpan)">
            <summary>
            Puts state data into the cache state with the default key and sliding expiration policy.
            </summary>
            <typeparam name="T">The type of data to put.</typeparam>
            <param name="instance">An instance of <typeparamref name="T"/> to store.</param>
            <param name="slidingExpiration">A time span representing the sliding expiration policy.</param>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Put``1(System.Object,``0,System.TimeSpan)">
            <summary>
            Puts state data into the cache state with the specified key with the specified sliding expiration
            </summary>
            <typeparam name="T">The type of data to put.</typeparam>
            <param name="key">An object representing the unique key with which the data is stored.</param>
            <param name="instance">An instance of <typeparamref name="T"/> to store.</param>
            <param name="slidingExpiration">A <see cref="T:System.TimeSpan"/> specifying the sliding expiration policy.</param>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Remove``1">
            <summary>
            Removes state data stored in the cache with the default key.
            </summary>
            <typeparam name="T">The type of data to remove.</typeparam>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Remove``1(System.Object)">
            <summary>
            Removes state data stored in the cache state with the specified key.
            </summary>
            <typeparam name="T">The type of data to remove.</typeparam>
            <param name="key">An object representing the unique key with which the data was stored.</param>
        </member>
        <member name="M:Dev.Framework.Cache.ICacheState.Clear">
            <summary>
            Clears all state stored in the cache.
            </summary>
        </member>
        <member name="T:Dev.Framework.Cache.Utils">
            <summary>
              
            </summary>
        </member>
        <member name="M:Dev.Framework.Cache.Utils.BuildFullKey``1(System.Object)">
            <summary>
             为一个类型创建命名
            </summary>
            <param name="userKey">用户提供的类型</param>
            <typeparam name="T">用于创建KEY的类型</typeparam>
            <returns>返回KEY</returns>
        </member>
    </members>
</doc>
